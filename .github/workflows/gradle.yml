#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: develop

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 8
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '8'
  #       distribution: 'adopt'
  #   - name: Run rat with Gradle
  #     uses: gradle/gradle-build-action@v2
  #     with:
  #       arguments: --console=plain --no-daemon build install javadoc spotlessCheck rat checkPom resolveDependencies pmdMain -x test

  unitTest:
    # needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: |
          8
          11
          17
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Execute Gradle build
      run: |
        pwd
        echo "before copying the gradlewScript....."
        ls
        cp gradlew gradlewStrict
        echo "before copying the gradlewScript....."
        ls
        sed -e 's/JAVA_HOME/GRADLE_JVM/g' -i.back gradlewScript
        GRADLE_JVM=${JAVA_HOME_8_X64} JAVA_TEST_PATH=${JAVA_HOME_8_X64} ./gradlewStrict \
          -PcompileJVM=${JAVA_HOME_8_X64} \
          -PcompileJVMVer=8 \
          -PtestJVM=${JAVA_HOME_8_X64} \
          -PtestJVMVer=8 \
          -PtestJava8Home=${JAVA_HOME_8_X64} \
          -PtestJava11Home=${JAVA_HOME_11_X64} \
          -PtestJava17Home=${JAVA_HOME_17_X64} \
          test --console=plain --no-daemon

  # acceptanceTest:
  #   needs: build
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 8
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '8'
  #       distribution: 'adopt'
  #   - name: Run acceptance tests with Gradle
  #     uses: gradle/gradle-build-action@v2
  #     with:
  #       arguments: acceptanceTest

  # integrationTest:
  #   needs: build
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 8
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '8'
  #       distribution: 'adopt'
  #   - name: Run integration tests with Gradle
  #     uses: gradle/gradle-build-action@v2
  #     with:
  #       arguments: integrationTest

  # upgradeTest:
  #   needs: build
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 8
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '8'
  #       distribution: 'adopt'
  #   - name: Run upgrade tests with Gradle
  #     uses: gradle/gradle-build-action@v2
  #     with:
  #       arguments: upgradeTest